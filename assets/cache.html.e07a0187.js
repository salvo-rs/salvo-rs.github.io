import{_ as s,o as n,c as a,e as l}from"./app.3f2e9511.js";const p={},o=l(`<h1 id="cache" tabindex="-1"><a class="header-anchor" href="#cache" aria-hidden="true">#</a> Cache</h1><p>提供缓存功能的中间件.</p><p>Cache 中间件可以对 <code>Response</code> 中的 <code>StatusCode</code>, <code>Headers</code>, <code>Body</code> 提供缓存功能. 对于已经缓存的内容, 当下次处理请求时, Cache 中间件会直接把缓存在内存中的内容发送给客户端.</p><p>注意, 此插件不会缓存 <code>Body</code> 是 <code>ResBody::Stream</code> 的 <code>Response</code>. 如果应用到了这一类型的 <code>Response</code>, Cache 不会处理这些请求, 也不会引起错误.</p><h2 id="主要功能" tabindex="-1"><a class="header-anchor" href="#主要功能" aria-hidden="true">#</a> 主要功能</h2><ul><li><p><code>CacheIssuer</code> 提供了对分配的缓存键值的抽象. <code>RequestIssuer</code> 是它的一个实现, 可以定义依据请求的 URL 的哪些部分以及请求的 <code>Method</code> 生成缓存的键. 你也可以定义你自己的缓存键生成的逻辑. 缓存的键不一定是字符串类型, 任何满足 <code>Hash + Eq + Send + Sync + &#39;static</code> 约束的类型都可以作为键.</p></li><li><p><code>CacheStore</code> 提供对数据的存取操作. <code>MemoryStore</code> 是内置的基于 <code>moka</code> 的一个内存的缓存实现. 你也可以定义自己的实现方式.</p></li><li><p><code>Cache</code> 是实现了 <code>Handler</code> 的结构体, 内部还有一个 <code>skipper</code> 字段, 可以指定跳过某些不需要缓存的请求. 默认情况下, 会使用 <code>MethodSkipper</code> 跳过除了 <code>Method::GET</code> 以外的所有请求.</p><p>内部实现示例代码:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">impl</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">S</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">I</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#4EC9B0;">Cache</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">S</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">I</span><span style="color:#D4D4D4;">&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">pub</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">store</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">S</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">issuer</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">I</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#569CD6;">Self</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">skipper</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">MethodSkipper</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">skip_all</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">skip_get</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#4EC9B0;">Cache</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">store</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">issuer</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">skipper</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Box</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">skipper</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="配置-cargo-toml" tabindex="-1"><a class="header-anchor" href="#配置-cargo-toml" aria-hidden="true">#</a> 配置 Cargo.toml</h2><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#9CDCFE;">salvo</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">version</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;*&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">features</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&quot;cache&quot;</span><span style="color:#D4D4D4;">] }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">time</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Duration</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">prelude</span><span style="color:#D4D4D4;">::*;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">writer</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Text</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">cache</span><span style="color:#D4D4D4;">::{</span><span style="color:#4EC9B0;">Cache</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">RequestIssuer</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">time</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">OffsetDateTime</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">home</span><span style="color:#D4D4D4;">() -&gt; </span><span style="color:#4EC9B0;">Text</span><span style="color:#D4D4D4;">&lt;&amp;&#39;</span><span style="color:#4EC9B0;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Text</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">Html</span><span style="color:#D4D4D4;">(HOME_HTML)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">short</span><span style="color:#D4D4D4;">() -&gt; </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">format!</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello World, my birth time is {}&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">OffsetDateTime</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">now_utc</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">long</span><span style="color:#D4D4D4;">() -&gt; </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">format!</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello World, my birth time is {}&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">OffsetDateTime</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">now_utc</span><span style="color:#D4D4D4;">())</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[tokio::main]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing_subscriber</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">fmt</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">info!</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Listening on http://127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">short_cache</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Cache</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">builder</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">time_to_live</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Duration</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">from_secs</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">RequestIssuer</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">default</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">long_cache</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Cache</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">builder</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">time_to_live</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Duration</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">from_secs</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">60</span><span style="color:#D4D4D4;">)).</span><span style="color:#DCDCAA;">build</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">RequestIssuer</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">default</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">home</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;short&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">short_cache</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">short</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;long&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">long_cache</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">long</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">TcpListener</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">().</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">; </span><span style="color:#4EC9B0;">Server</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">serve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;">).</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> HOME_HTML: &amp;</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">r#&quot;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;head&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;title&gt;Cache Example&lt;/title&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;/head&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;body&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;h2&gt;Cache Example&lt;/h2&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            This examples shows how to use cache middleware. </span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            &lt;a href=&quot;/short&quot; target=&quot;_blank&quot;&gt;Cache 5 seconds&lt;/a&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            &lt;a href=&quot;/long&quot; target=&quot;_blank&quot;&gt;Cache 1 minute&lt;/a&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;/body&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;/html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&quot;#</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),e=[o];function D(c,t){return n(),a("div",null,e)}const i=s(p,[["render",D],["__file","cache.html.vue"]]);export{i as default};
