import{_ as s,o as n,c as a,e as l}from"./app.3f2e9511.js";const p={},o=l(`<h1 id="rate-limiter" tabindex="-1"><a class="header-anchor" href="#rate-limiter" aria-hidden="true">#</a> Rate Limiter</h1><p>Middleware that provides flow control functionality.</p><h2 id="main-features" tabindex="-1"><a class="header-anchor" href="#main-features" aria-hidden="true">#</a> Main Features</h2><ul><li><p><code>RateIssuer</code> provides an abstraction of the assigned key value to identify the visitor&#39;s identity. <code>RemoteIpIssuer</code> is an implementation of it that can determine the visitor based on the requested IP address. Eq + Send + Sync + &#39;static\` constraint types can be used as keys.</p></li><li><p><code>RateGuard</code> provides an abstraction for the flow control algorithm. By default, two implementations of fixed window (<code>FixedGuard</code>) and sliding window (<code>SlidingGuard</code>) are implemented.</p></li><li><p><code>RateStore</code> provides access to data. <code>MemoryStore</code> is a built-in <code>moka</code>-based memory cache implementation. You can also define your own implementation.</p></li><li><p><code>RateLimiter</code> is a structure that implements <code>Handler</code>, and there is also a <code>skipper</code> field inside, which can be specified to skip certain requests that do not require caching. By default, <code>none_skipper</code> will be used to not skip any requests.</p></li><li><p><code>QuotaGetter</code> provides the abstraction of quota acquisition, which can obtain a quota object according to the visitor&#39;s <code>Key</code>, which means that we can configure the user quota and other information into the database, change it dynamically, and acquire it dynamically.</p></li></ul><h2 id="config-cargo-toml" tabindex="-1"><a class="header-anchor" href="#config-cargo-toml" aria-hidden="true">#</a> Config Cargo.toml</h2><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#9CDCFE;">salvo</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">version</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&quot;*&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">features</span><span style="color:#D4D4D4;"> = [</span><span style="color:#CE9178;">&quot;rate-limiter&quot;</span><span style="color:#D4D4D4;">] }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sample-code-with-static-quota" tabindex="-1"><a class="header-anchor" href="#sample-code-with-static-quota" aria-hidden="true">#</a> Sample Code With Static Quota</h2><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">prelude</span><span style="color:#D4D4D4;">::*;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo_rate_limiter</span><span style="color:#D4D4D4;">::{</span><span style="color:#4EC9B0;">BasicQuota</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">FixedGuard</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">RateLimiter</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">RemoteIpIssuer</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">hello_world</span><span style="color:#D4D4D4;">() -&gt; &amp;&#39;</span><span style="color:#4EC9B0;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;Hello World&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[tokio::main]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing_subscriber</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">fmt</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">info!</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Listening on http://127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">limiter</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">RateLimiter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">FixedGuard</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">RemoteIpIssuer</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">BasicQuota</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">per_second</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">limiter</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">hello_world</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">TcpListener</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">().</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">; </span><span style="color:#4EC9B0;">Server</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">serve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;">).</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sample-code-with-dynnamic-quota" tabindex="-1"><a class="header-anchor" href="#sample-code-with-dynnamic-quota" aria-hidden="true">#</a> Sample Code With Dynnamic Quota</h2><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">borrow</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Borrow</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">collections</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">HashMap</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">std</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">hash</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Hash</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">once_cell</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">sync</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Lazy</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">prelude</span><span style="color:#D4D4D4;">::*;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo_rate_limiter</span><span style="color:#D4D4D4;">::{</span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">QuotaGetter</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">RateIssuer</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">RateLimiter</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">SlidingGuard</span><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> USER_QUOTAS: </span><span style="color:#4EC9B0;">Lazy</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">HashMap</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">&gt;&gt; = </span><span style="color:#4EC9B0;">Lazy</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(|| {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">mut</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">map</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">HashMap</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">map</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">insert</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;user1&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">into</span><span style="color:#D4D4D4;">(), </span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">per_minute</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">map</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">insert</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;user2&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">into</span><span style="color:#D4D4D4;">(), </span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">per_minute</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">map</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">insert</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;user3&quot;</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">into</span><span style="color:#D4D4D4;">(), </span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">per_minute</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">60</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">map</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">pub</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UserIssuer</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">#[async_trait]</span></span>
<span class="line"><span style="color:#569CD6;">impl</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">RateIssuer</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">UserIssuer</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Key</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">issue</span><span style="color:#D4D4D4;">(&amp;</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#569CD6;">mut</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Request</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">_depot</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#4EC9B0;">Depot</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#4EC9B0;">Option</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">Self</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Key</span><span style="color:#D4D4D4;">&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">query</span><span style="color:#D4D4D4;">::&lt;</span><span style="color:#569CD6;">Self</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Key</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;user&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">pub</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">CustomQuotaGetter</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">#[async_trait]</span></span>
<span class="line"><span style="color:#569CD6;">impl</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">QuotaGetter</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">CustomQuotaGetter</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Quota</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">CelledQuota</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">type</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Q</span><span style="color:#D4D4D4;">&gt;(&amp;</span><span style="color:#569CD6;">self</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#4EC9B0;">Q</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#4EC9B0;">Result</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">Self</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Quota</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">Self</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">where</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Borrow</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Q</span><span style="color:#D4D4D4;">&gt;,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Q</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">Hash</span><span style="color:#D4D4D4;"> + </span><span style="color:#4EC9B0;">Eq</span><span style="color:#D4D4D4;"> + </span><span style="color:#4EC9B0;">Sync</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">        USER_QUOTAS</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">cloned</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">ok_or_else</span><span style="color:#D4D4D4;">(|| </span><span style="color:#4EC9B0;">Error</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">other</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;user not found&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">limited</span><span style="color:#D4D4D4;">() -&gt; &amp;&#39;</span><span style="color:#4EC9B0;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;Limited page&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">home</span><span style="color:#D4D4D4;">() -&gt; </span><span style="color:#4EC9B0;">Text</span><span style="color:#D4D4D4;">&lt;&amp;&#39;</span><span style="color:#4EC9B0;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;">&gt; {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Text</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">Html</span><span style="color:#D4D4D4;">(HOME_HTML)</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[tokio::main]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing_subscriber</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">fmt</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">init</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">tracing</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">info!</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Listening on http://127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">limiter</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">RateLimiter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">SlidingGuard</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(), </span><span style="color:#4EC9B0;">MemoryStore</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(), </span><span style="color:#4EC9B0;">UserIssuer</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">CustomQuotaGetter</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">home</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;limited&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">limiter</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">limited</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">TcpListener</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;127.0.0.1:7878&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">bind</span><span style="color:#D4D4D4;">().</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">; </span><span style="color:#4EC9B0;">Server</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">acceptor</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">serve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;">).</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> HOME_HTML: &amp;</span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">r#&quot;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;!DOCTYPE html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;head&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;title&gt;Rate Limiter Dynmaic&lt;/title&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;/head&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;body&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;h2&gt;Rate Limiter Dynamic&lt;/h2&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            This example shows how to set limit for different users. </span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            &lt;a href=&quot;/limited?user=user1&quot; target=&quot;_blank&quot;&gt;Limited page for user1: 1/min&lt;/a&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            &lt;a href=&quot;/limited?user=user2&quot; target=&quot;_blank&quot;&gt;Limited page for user2: 10/min&lt;/a&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">            &lt;a href=&quot;/limited?user=user3&quot; target=&quot;_blank&quot;&gt;Limited page for user3: 60/min&lt;/a&gt;</span></span>
<span class="line"><span style="color:#CE9178;">        &lt;/p&gt;</span></span>
<span class="line"><span style="color:#CE9178;">    &lt;/body&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&lt;/html&gt;</span></span>
<span class="line"><span style="color:#CE9178;">&quot;#</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),e=[o];function D(t,r){return n(),a("div",null,e)}const i=s(p,[["render",D],["__file","rate-limiter.html.vue"]]);export{i as default};
