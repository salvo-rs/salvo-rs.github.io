import{_ as s,o as a,c as n,e as l}from"./app.3f2e9511.js";const e={},o=l(`<h1 id="router" tabindex="-1"><a class="header-anchor" href="#router" aria-hidden="true">#</a> Router</h1><h2 id="what-is-router" tabindex="-1"><a class="header-anchor" href="#what-is-router" aria-hidden="true">#</a> What is router</h2><p>Router can route http requests to different handlers. This is a basic and key feature in salvo.</p><h2 id="write-in-flat-way" tabindex="-1"><a class="header-anchor" href="#write-in-flat-way" aria-hidden="true">#</a> Write in flat way</h2><p>We can wite routers in flat way, like this:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writers</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">create_writer</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers/&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_writer</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">edit_writer</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_writer</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers/&lt;id&gt;/articles&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writer_articles</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="write-in-tree-way" tabindex="-1"><a class="header-anchor" href="#write-in-tree-way" aria-hidden="true">#</a> Write in tree way</h2><p>We can write router like a tree, this is also the recommended way:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writers</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">create_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">edit_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writer_articles</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This form of definition can make the definition of router clear and simple for complex projects.</p><p>There are many methods in <code>Router</code> that will return to <code>Self</code> after being called, so as to write code in a chain. Sometimes, you need to decide how to route according to certain conditions, and the <code>Router</code> also provides <code>then </code> function, which is also easy to use:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_articles</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    ).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(|</span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;">|{</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">admin_mode</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">router</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">create_article</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">update_article</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            )</span></span>
<span class="line"><span style="color:#D4D4D4;">        } </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">router</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    });</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This example represents that only when the server is in <code>admin_mode</code>, routers such as creating articles, editing and deleting articles will be added.</p><h2 id="get-param-in-routers" tabindex="-1"><a class="header-anchor" href="#get-param-in-routers" aria-hidden="true">#</a> Get param in routers</h2><p>In previous source code, <code>&lt;id&gt;</code> is a param definition. We can access it&#39;s value via Request instance:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">show_writer</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#569CD6;">mut</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Request</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">param</span><span style="color:#D4D4D4;">::&lt;</span><span style="color:#4EC9B0;">i64</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;id&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">unwrap</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;id&gt;</code> matches a fragment in the path, under normal circumstances, the article <code>id</code> is just a number, which we can use regular expressions to restrict <code>id</code> matching rules, <code>r&quot;&lt;id:/\\d+/&gt;&quot;</code>.</p><p>For numeric characters there is an easier way to use <code>&lt;id:num&gt;</code>, the specific writing is:</p><ul><li><code>&lt;id:num&gt;</code>, matches any number of numeric characters;</li><li><code>&lt;id:num[10]&gt;</code>, only matches a certain number of numeric characters, where 10 means that the match only matches 10 numeric characters; -<code>&lt;id:num(..10)&gt;</code> means matching 1 to 9 numeric characters;</li><li><code>&lt;id:num(3..10)&gt;</code> means matching 3 to 9 numeric characters;</li><li><code>&lt;id:num(..=10)&gt;</code> means matching 1 to 10 numeric characters;</li><li><code>&lt;id:num(3..=10)&gt;</code> means match 3 to 10 numeric characters;</li><li><code>&lt;id:num(10..)&gt;</code> means to match at least 10 numeric characters.</li></ul><p>You can also use <code>&lt;*&gt;</code> or <code>&lt;**&gt;</code> to match all remaining path fragments. In order to make the code more readable, you can also add appropriate name to make the path semantics more clear, for example: <code>&lt;**file_path&gt;</code>.</p><p>It is allowed to combine multiple expressions to match the same path segment, such as <code>/articles/article_&lt;id:num&gt;/</code>, <code>/images/&lt;name&gt;.&lt;ext&gt;</code>.</p><h2 id="add-middlewares" tabindex="-1"><a class="header-anchor" href="#add-middlewares" aria-hidden="true">#</a> Add middlewares</h2><p>Middleware can be added via <code>hoop</code> method.</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">check_authed</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writers</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">create_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">edit_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writer_articles</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, the root router has a middleware to check current user is authed. This middleware will affects root router and it&#39;s descendants.</p><p>If we don&#39;t want to check user is authed when current user view writer informations and articles. We can write router like this:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">check_authed</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">create_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">edit_writer</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_writer</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;writers&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writers</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_writer</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_writer_articles</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">        ),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Although there are two routers have the same <code>path(&quot;articles&quot;)</code>, they can still be added to the same parent route at the same time.</p><h2 id="filters" tabindex="-1"><a class="header-anchor" href="#filters" aria-hidden="true">#</a> Filters</h2><p>Many methods in <code>Router</code> return to themselves in order to easily implement chain writing. Sometimes, in some cases, you need to judge based on conditions before you can add routing. Routing also provides some convenience Method, simplify code writing.</p><p><code>Router</code> uses the filter to determine whether the route matches. The filter supports logical operations and or. Multiple filters can be added to a route. When all the added filters match, the route is matched successfully.</p><p>It should be noted that the URL collection of the website is a tree structure, and this structure is not equivalent to the tree structure of <code>Router</code>. A node of the URL may correspond to multiple <code>Router</code>. For example, some paths under the <code>articles/</code> path require login, and some paths do not require login. Therefore, we can put the same login requirements under a <code>Router</code>, and on top of them Add authentication middleware on <code>Router</code>. In addition, you can access it without logging in and put it under another route without authentication middleware:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_articles</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">hoop</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">auth_check</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">post</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">list_articles</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">edit_article</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_article</span><span style="color:#D4D4D4;">)),</span></span>
<span class="line"><span style="color:#D4D4D4;">    );</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Router is used to filter requests, and then send the requests to different Handlers for processing.</p><p>The most commonly used filtering is <code>path</code> and <code>method</code>. <code>path</code> matches path information; <code>method</code> matches the requested Method.</p><p>We can use <code>and</code>, <code>or </code> to connect between filter conditions, for example:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">filter</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;hello&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">and</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">()));</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="path-filter" tabindex="-1"><a class="header-anchor" href="#path-filter" aria-hidden="true">#</a> Path filter</h3><p>The filter based on the request path is the most frequently used. Parameters can be defined in the path filter, such as:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;articles/&lt;id&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;files/&lt;**rest_path&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">serve_file</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>In <code>Handler</code>, it can be obtained through the <code>get_param</code> function of the <code>Request</code> object:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">pub</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">show_article</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#569CD6;">mut</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Request</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">article_id</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">param</span><span style="color:#D4D4D4;">::&lt;</span><span style="color:#4EC9B0;">i64</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;id&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[handler]</span></span>
<span class="line"><span style="color:#569CD6;">pub</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">serve_file</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">: &amp;</span><span style="color:#569CD6;">mut</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Request</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">rest_path</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">req</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">param</span><span style="color:#D4D4D4;">::&lt;</span><span style="color:#4EC9B0;">i64</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#CE9178;">&quot;**rest_path&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="method-filter" tabindex="-1"><a class="header-anchor" href="#method-filter" aria-hidden="true">#</a> Method filter</h3><p>Filter requests based on the <code>HTTP</code> request&#39;s <code>Method</code>, for example:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">update_article</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_article</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Here <code>get</code>, <code>patch</code>, <code>delete</code> are all Method filters. It is actually equivalent to:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">routing</span><span style="color:#D4D4D4;">::filter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">show_router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_filter</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">()).</span><span style="color:#DCDCAA;">handle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">update_router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_filter</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">patch</span><span style="color:#D4D4D4;">()).</span><span style="color:#DCDCAA;">handle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">update_article</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">delete_router</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_filter</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">()).</span><span style="color:#DCDCAA;">handle</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_article</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_router</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">update_router</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">delete_router</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-wisp" tabindex="-1"><a class="header-anchor" href="#custom-wisp" aria-hidden="true">#</a> Custom Wisp</h2><p>For some frequently-occurring matching expressions, we can name a short name by <code>PathFilter::register_wisp_regex</code> or <code>PathFilter::register_wisp_builder</code>. For example, GUID format is often used in paths appears, normally written like this every time a match is required:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/articles/&lt;id:/[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA -F]{12}/&gt;&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/users/&lt;id:/[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA -F]{12}/&gt;&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Writing this complex regular expression every time is prone to errors, and the code is not beautiful. You can do this:</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">use</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">salvo</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">routing</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">filter</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">PathFilter</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">#[tokio::main]</span></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">fn</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">guid</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">regex</span><span style="color:#D4D4D4;">::</span><span style="color:#4EC9B0;">Regex</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA- F]{12}&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">unwrap</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">PathFilter</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">register_wisp_regex</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;guid&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">guid</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">new</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/articles/&lt;id:guid&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_article</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        .</span><span style="color:#DCDCAA;">push</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Router</span><span style="color:#D4D4D4;">::</span><span style="color:#DCDCAA;">with_path</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;/users/&lt;id:guid&gt;&quot;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">get</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">show_user</span><span style="color:#D4D4D4;">));</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You only need to register once, and then you can directly match the GUID through the simple writing method as <code>&lt;id:guid&gt;</code>, which simplifies the writing of the code.</p>`,53),p=[o];function t(D,r){return a(),n("div",null,p)}const i=s(e,[["render",t],["__file","router.html.vue"]]);export{i as default};
